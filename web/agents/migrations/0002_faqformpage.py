# Generated by Django 5.0 on 2024-04-15 06:31

import django.db.models.deletion
import utils.faq
import utils.streamfield
import wagtail.blocks
import wagtail.contrib.table_block.blocks
import wagtail.documents.blocks
import wagtail.embeds.blocks
import wagtail.fields
import wagtail.images.blocks
import wagtailstreamforms.blocks
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('agents', '0001_initial'),
        ('images', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='FaqFormPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('heading', models.CharField(blank=True, help_text='Displayed in menus, the heading is the title of the page.', max_length=255, null=True, verbose_name='Heading')),
                ('tooltip', models.CharField(blank=True, help_text='Used for accessibility (alt, title) and when user mouse over the icon.', max_length=255, null=True, verbose_name='Tooltip')),
                ('answer', wagtail.fields.StreamField([('single_answer', wagtail.blocks.StreamBlock([('heading', wagtail.blocks.CharBlock(form_classname='title', icon='title', label='Heading')), ('paragraph', wagtail.blocks.RichTextBlock(editor='full', icon='pilcrow', label='Paragraph')), ('media', utils.streamfield.CustomMediaBlock(icon='media', label='Media')), ('image', wagtail.images.blocks.ImageChooserBlock(icon='image', label='Image')), ('document', wagtail.documents.blocks.DocumentChooserBlock(icon='doc-full', label='Document')), ('link', wagtail.blocks.StructBlock([('url', wagtail.blocks.URLBlock(help_text='Enter the URL.', label='URL')), ('text', wagtail.blocks.CharBlock(help_text='Enter the visible text for this link (optional).', label='Replacement Text', required=False))], icon='link', label='Link')), ('button', wagtail.blocks.StructBlock([('url', wagtail.blocks.URLBlock(help_text='Enter the URL.', label='URL', required=True)), ('text', wagtail.blocks.CharBlock(help_text='Enter the visible text for this link (optional).', label='Button text', required=False)), ('position', wagtail.blocks.ChoiceBlock(choices=[('cgs-center', 'Center'), ('cgs-left', 'Left'), ('cgs-right', 'Right')], help_text='Horizontal alignment.', label='Button position')), ('color', wagtail.blocks.ChoiceBlock(choices=[('cgs-green', 'Green'), ('cgs-darkgreen', 'Dark Green'), ('cgs-cyan', 'Cyan'), ('cgs-lightgreen', "Vert d'eau"), ('cgs-orange', 'Orange')], help_text='Optionnal, default is green.', label='Button color')), ('icon', wagtail.images.blocks.ImageChooserBlock(help_text='Optionnal', icon='image', label='Button image', required=False))], icon='button', label='Button')), ('embed', wagtail.blocks.StructBlock([('embed_url', wagtail.embeds.blocks.EmbedBlock(label='URL a intégrer')), ('resolution', wagtail.blocks.ChoiceBlock(choices=[('very_small', 'Very small'), ('small', 'Small'), ('medium', 'Medium'), ('large', 'Large'), ('very_large', 'Very large')], label='Size of the frame')), ('alternative_title', wagtail.blocks.CharBlock(blank=True, help_text='Alternative title for users accessibility.', label='Alternative title', required=False))], icon='media', label='Embed')), ('list', wagtail.blocks.ListBlock(wagtail.blocks.CharBlock(icon='list-ul', label='List Item'), icon='list-ul', label='List')), ('quote', wagtail.blocks.BlockQuoteBlock(icon='openquote', label='Quote')), ('table', wagtail.contrib.table_block.blocks.TableBlock(icon='table', label='Table', table_options={'autoColumnSize': False, 'colHeaders': True, 'contextMenu': ['row_above', 'row_below', '---------', 'col_left', 'col_right', '---------', 'remove_row', 'remove_col', '---------', 'undo', 'redo', '---------', 'copy', 'cut', '---------', 'alignment', '---------', 'mergeCells'], 'height': 108, 'language': 'fr-FR', 'mergeCells': True, 'minSpareRows': 0, 'renderer': 'text', 'rowHeaders': True, 'startCols': 3, 'startRows': 3}))], icon='doc-full', label='Simple answer', required=())), ('multiple_answer', wagtail.blocks.StructBlock([('reduction', wagtail.blocks.BooleanBlock(help_text='Check this box if you want to create a smaller version of choice answer (Perfect for the choices inside another choice answer)', label='Size reduction', required=False)), ('choices', wagtail.blocks.ListBlock(utils.faq.ChoiceBlock, help_text='Cliquez sur le + ci-dessous pour ajouter une option dans vos conditions', label='Ajouter une option'))])), ('step_answer', wagtail.blocks.StructBlock([('ordonnated', wagtail.blocks.BooleanBlock(help_text='Check this box if you want to create an ordonnated version of step answer (Step 1, Step 2, Step 3, etc.)', label='Ordonnated steps', required=False)), ('steps', wagtail.blocks.ListBlock(utils.faq.StepBlock, help_text='Cliquez sur le + ci-dessous pour ajouter un élément dans votre liste', label='Ajouter un élément'))]))], blank=True, help_text='Click on the ⊕ below to add an answer. You can add simple answer(s), conditional answer(s) or step answer(s). You can either imbriqued conditional answer(s) or step answer(s) inside any answer.', null=True, verbose_name='Answer(s)')),
                ('body', wagtail.fields.StreamField([('body', wagtail.blocks.StreamBlock([('heading', wagtail.blocks.CharBlock(form_classname='title', icon='title', label='Heading')), ('paragraph', wagtail.blocks.RichTextBlock(editor='full', icon='pilcrow', label='Paragraph')), ('media', utils.streamfield.CustomMediaBlock(icon='media', label='Media')), ('image', wagtail.images.blocks.ImageChooserBlock(icon='image', label='Image')), ('document', wagtail.documents.blocks.DocumentChooserBlock(icon='doc-full', label='Document')), ('link', wagtail.blocks.StructBlock([('url', wagtail.blocks.URLBlock(help_text='Enter the URL.', label='URL')), ('text', wagtail.blocks.CharBlock(help_text='Enter the visible text for this link (optional).', label='Replacement Text', required=False))], icon='link', label='Link')), ('button', wagtail.blocks.StructBlock([('url', wagtail.blocks.URLBlock(help_text='Enter the URL.', label='URL', required=True)), ('text', wagtail.blocks.CharBlock(help_text='Enter the visible text for this link (optional).', label='Button text', required=False)), ('position', wagtail.blocks.ChoiceBlock(choices=[('cgs-center', 'Center'), ('cgs-left', 'Left'), ('cgs-right', 'Right')], help_text='Horizontal alignment.', label='Button position')), ('color', wagtail.blocks.ChoiceBlock(choices=[('cgs-green', 'Green'), ('cgs-darkgreen', 'Dark Green'), ('cgs-cyan', 'Cyan'), ('cgs-lightgreen', "Vert d'eau"), ('cgs-orange', 'Orange')], help_text='Optionnal, default is green.', label='Button color')), ('icon', wagtail.images.blocks.ImageChooserBlock(help_text='Optionnal', icon='image', label='Button image', required=False))], icon='button', label='Button')), ('embed', wagtail.blocks.StructBlock([('embed_url', wagtail.embeds.blocks.EmbedBlock(label='URL a intégrer')), ('resolution', wagtail.blocks.ChoiceBlock(choices=[('very_small', 'Very small'), ('small', 'Small'), ('medium', 'Medium'), ('large', 'Large'), ('very_large', 'Very large')], label='Size of the frame')), ('alternative_title', wagtail.blocks.CharBlock(blank=True, help_text='Alternative title for users accessibility.', label='Alternative title', required=False))], icon='media', label='Embed')), ('list', wagtail.blocks.ListBlock(wagtail.blocks.CharBlock(icon='list-ul', label='List Item'), icon='list-ul', label='List')), ('quote', wagtail.blocks.BlockQuoteBlock(icon='openquote', label='Quote')), ('table', wagtail.contrib.table_block.blocks.TableBlock(icon='table', label='Table', table_options={'autoColumnSize': False, 'colHeaders': True, 'contextMenu': ['row_above', 'row_below', '---------', 'col_left', 'col_right', '---------', 'remove_row', 'remove_col', '---------', 'undo', 'redo', '---------', 'copy', 'cut', '---------', 'alignment', '---------', 'mergeCells'], 'height': 108, 'language': 'fr-FR', 'mergeCells': True, 'minSpareRows': 0, 'renderer': 'text', 'rowHeaders': True, 'startCols': 3, 'startRows': 3}))], icon='doc-full', label='Simple answer', required=()))], blank=True, help_text='This is the main content of the page.', null=True, verbose_name='Agenda')),
                ('form', wagtail.fields.StreamField([('form_field', wagtail.blocks.StructBlock([('form', wagtailstreamforms.blocks.FormChooserBlock()), ('form_action', wagtail.blocks.CharBlock(help_text='The form post action. "" or "." for the current page or a url', required=False)), ('form_reference', wagtailstreamforms.blocks.InfoBlock(help_text='This form will be given a unique reference once saved', required=False))], icon='form', label='Form field'))], blank=True, help_text='Add a form to this page.', null=True, verbose_name='Form')),
                ('logo', models.ForeignKey(blank=True, help_text='𝐈𝐝𝐞𝐚𝐥 𝐟𝐨𝐫𝐦: Round or square (1/1). 𝐈𝐝𝐞𝐚𝐥 𝐟𝐨𝐫𝐦𝐚𝐭: Filled SVG. 𝐒𝐞𝐜𝐨𝐧𝐝𝐚𝐫𝐲 𝐟𝐨𝐫𝐦𝐚𝐭: PNG with transparent background.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='images.customimage', verbose_name='Logo (SVG, png, jpg, etc.)')),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
    ]
