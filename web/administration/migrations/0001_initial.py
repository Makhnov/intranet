# Generated by Django 5.0 on 2024-02-14 11:16

import django.db.models.deletion
import home.models
import wagtail.blocks
import wagtail.contrib.table_block.blocks
import wagtail.embeds.blocks
import wagtail.fields
import wagtail.images.blocks
import wagtail_pdf_view.mixins
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('wagtailcore', '0092_query_searchpromotion_querydailyhits'),
    ]

    operations = [
        migrations.CreateModel(
            name='CompteRenduPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('date', models.DateTimeField(blank=True, null=True, verbose_name='Date')),
                ('quorum', models.BooleanField(default=True, help_text="Uncheck this box if the quorum isn't reached.", verbose_name='Quorum')),
                ('body', wagtail.fields.StreamField([('heading', wagtail.blocks.CharBlock(form_classname='title', icon='title')), ('paragraph', wagtail.blocks.RichTextBlock(icon='pilcrow')), ('media', home.models.MediaBlock(icon='media')), ('image', wagtail.images.blocks.ImageChooserBlock(icon='image')), ('link', wagtail.blocks.URLBlock(icon='link')), ('embed', wagtail.embeds.blocks.EmbedBlock(icon='media')), ('list', wagtail.blocks.ListBlock(wagtail.blocks.CharBlock(icon='list-ul'), icon='list-ul')), ('quote', wagtail.blocks.BlockQuoteBlock(icon='openquote')), ('table', wagtail.contrib.table_block.blocks.TableBlock(icon='table'))], blank=True, help_text='This is the main content of the page.', null=True, verbose_name='Agenda')),
            ],
            options={
                'verbose_name': 'compte-rendu',
                'verbose_name_plural': 'comptes-rendus',
            },
            bases=(wagtail_pdf_view.mixins.PdfViewPageMixin, 'wagtailcore.page'),
        ),
        migrations.CreateModel(
            name='CompteRenduPieceJointe',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sort_order', models.IntegerField(blank=True, editable=False, null=True)),
                ('title', models.CharField(blank=True, max_length=250, null=True, verbose_name='Title')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ConferencesIndexPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('heading', models.CharField(blank=True, help_text='Displayed in menus, the heading is the title of the page.', max_length=255, null=True, verbose_name='Heading')),
                ('tooltip', models.CharField(blank=True, help_text='Used for accessibility (alt, title) and when user mouse over the icon.', max_length=255, null=True, verbose_name='Tooltip')),
                ('label', models.SlugField(blank=True, help_text='Le texte qui apparaitra dans le titre des convocations et des comptes-rendus.', max_length=15, verbose_name='Label')),
            ],
            options={
                'verbose_name': 'conférence',
                'verbose_name_plural': 'conférences',
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='ConseilsIndexPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('heading', models.CharField(blank=True, help_text='Displayed in menus, the heading is the title of the page.', max_length=255, null=True, verbose_name='Heading')),
                ('tooltip', models.CharField(blank=True, help_text='Used for accessibility (alt, title) and when user mouse over the icon.', max_length=255, null=True, verbose_name='Tooltip')),
                ('label', models.SlugField(blank=True, help_text='Le texte qui apparaitra dans le titre des convocations et des comptes-rendus.', max_length=15, verbose_name='Label')),
            ],
            options={
                'verbose_name': 'conseil',
                'verbose_name_plural': 'conseils',
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='ConvocationPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('date', models.DateTimeField(verbose_name='Date')),
                ('body', wagtail.fields.RichTextField(blank=True, verbose_name='Agenda')),
            ],
            options={
                'verbose_name': 'convocation',
                'verbose_name_plural': 'convocations',
            },
            bases=(wagtail_pdf_view.mixins.PdfViewPageMixin, 'wagtailcore.page'),
        ),
        migrations.CreateModel(
            name='ConvocationPieceJointe',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sort_order', models.IntegerField(blank=True, editable=False, null=True)),
                ('title', models.CharField(blank=True, max_length=250, null=True, verbose_name='Title')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ConvocationUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('function_weight', models.IntegerField(blank=True, null=True, verbose_name='Function Weight')),
                ('function', models.CharField(blank=True, max_length=255, null=True, verbose_name='Function')),
                ('gender', models.CharField(blank=True, max_length=50, null=True, verbose_name='Gender')),
                ('identity', models.CharField(blank=True, max_length=255, null=True, verbose_name='Identity')),
                ('municipality', models.CharField(blank=True, max_length=255, null=True, verbose_name='Municipality')),
                ('presence', models.IntegerField(choices=[(1, 'Présent'), (2, 'Remplacé'), (3, 'Non remplacé')], default=1, verbose_name='Presence')),
            ],
            options={
                'verbose_name': 'Convocation User',
                'verbose_name_plural': 'Convocation Users',
            },
        ),
        migrations.CreateModel(
            name='AdministrationIndexPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('heading', models.CharField(blank=True, help_text='Displayed in menus, the heading is the title of the page.', max_length=255, null=True, verbose_name='Heading')),
                ('tooltip', models.CharField(blank=True, help_text='Used for accessibility (alt, title) and when user mouse over the icon.', max_length=255, null=True, verbose_name='Tooltip')),
                ('logo', models.ForeignKey(blank=True, help_text='𝐈𝐝𝐞𝐚𝐥 𝐟𝐨𝐫𝐦: Round or square (1/1). 𝐈𝐝𝐞𝐚𝐥 𝐟𝐨𝐫𝐦𝐚𝐭: Filled SVG. 𝐒𝐞𝐜𝐨𝐧𝐝𝐚𝐫𝐲 𝐟𝐨𝐫𝐦𝐚𝐭: PNG with transparent background.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='images.customimage', verbose_name='Logo (SVG, png, jpg, etc.)')),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='BureauxIndexPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('heading', models.CharField(blank=True, help_text='Displayed in menus, the heading is the title of the page.', max_length=255, null=True, verbose_name='Heading')),
                ('tooltip', models.CharField(blank=True, help_text='Used for accessibility (alt, title) and when user mouse over the icon.', max_length=255, null=True, verbose_name='Tooltip')),
                ('label', models.SlugField(blank=True, help_text='Le texte qui apparaitra dans le titre des convocations et des comptes-rendus.', max_length=15, verbose_name='Label')),
                ('logo', models.ForeignKey(blank=True, help_text='𝐈𝐝𝐞𝐚𝐥 𝐟𝐨𝐫𝐦: Round or square (1/1). 𝐈𝐝𝐞𝐚𝐥 𝐟𝐨𝐫𝐦𝐚𝐭: Filled SVG. 𝐒𝐞𝐜𝐨𝐧𝐝𝐚𝐫𝐲 𝐟𝐨𝐫𝐦𝐚𝐭: PNG with transparent background.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='images.customimage', verbose_name='Logo (SVG, png, jpg, etc.)')),
            ],
            options={
                'verbose_name': 'bureau',
                'verbose_name_plural': 'bureaux',
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='CommissionPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('heading', models.CharField(blank=True, help_text='Displayed in menus, the heading is the title of the page.', max_length=255, null=True, verbose_name='Heading')),
                ('tooltip', models.CharField(blank=True, help_text='Used for accessibility (alt, title) and when user mouse over the icon.', max_length=255, null=True, verbose_name='Tooltip')),
                ('type', models.CharField(choices=[('commission', 'Commission'), ('groupe_de_travail', 'Groupe de travail')], default='commission', help_text='Choose if this is a commission or a working group.', max_length=20, verbose_name='Type')),
                ('label', models.SlugField(blank=True, help_text='Le texte qui apparaitra dans le titre des convocations et des comptes-rendus.', max_length=15, verbose_name='Label')),
                ('logo', models.ForeignKey(blank=True, help_text='𝐈𝐝𝐞𝐚𝐥 𝐟𝐨𝐫𝐦: Round or square (1/1). 𝐈𝐝𝐞𝐚𝐥 𝐟𝐨𝐫𝐦𝐚𝐭: Filled SVG. 𝐒𝐞𝐜𝐨𝐧𝐝𝐚𝐫𝐲 𝐟𝐨𝐫𝐦𝐚𝐭: PNG with transparent background.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='images.customimage', verbose_name='Logo (SVG, png, jpg, etc.)')),
            ],
            options={
                'verbose_name': 'commission ou groupe de travail',
                'verbose_name_plural': 'commissions ou groupes de travail',
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='CommissionsIndexPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('heading', models.CharField(blank=True, help_text='Displayed in menus, the heading is the title of the page.', max_length=255, null=True, verbose_name='Heading')),
                ('tooltip', models.CharField(blank=True, help_text='Used for accessibility (alt, title) and when user mouse over the icon.', max_length=255, null=True, verbose_name='Tooltip')),
                ('logo', models.ForeignKey(blank=True, help_text='𝐈𝐝𝐞𝐚𝐥 𝐟𝐨𝐫𝐦: Round or square (1/1). 𝐈𝐝𝐞𝐚𝐥 𝐟𝐨𝐫𝐦𝐚𝐭: Filled SVG. 𝐒𝐞𝐜𝐨𝐧𝐝𝐚𝐫𝐲 𝐟𝐨𝐫𝐦𝐚𝐭: PNG with transparent background.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='images.customimage', verbose_name='Logo (SVG, png, jpg, etc.)')),
            ],
            options={
                'verbose_name': 'Commissions (Index)',
            },
            bases=('wagtailcore.page',),
        ),
    ]
