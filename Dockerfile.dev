# Utilisation d'une image Python officielle comme image de base
FROM python:3.12.0-bullseye

# Création d'un utilisateur non-root pour des raisons de sécurité
RUN useradd -ms /bin/bash wagtail

# Installation des dépendances nécessaires
RUN apt-get update && apt-get install -y \
    build-essential \
    libpq-dev \
    libjpeg62-turbo-dev \
    zlib1g-dev \
    libwebp-dev \
    git \
 && rm -rf /var/lib/apt/lists/*

# Mise à jour de pip
RUN python -m pip install --upgrade pip

# Configuration des variables d'environnement
ENV PYTHONUNBUFFERED=1 \
    PORT=8000 \
    LANG=fr_FR.UTF-8 \
    LANGUAGE=fr_FR:fr \
    LC_ALL=fr_FR.UTF-8

# Exposition du port utilisé par le conteneur
EXPOSE 8000

# Définition du répertoire de travail
WORKDIR /app

# Copie des fichiers de requirements et installation des dépendances Python
COPY requirements.txt .
RUN pip install -r requirements.txt

# Copie du code source dans le conteneur
COPY ./web /app

# Changement de la propriété du répertoire /app pour l'utilisateur wagtail et création du répertoire media
RUN chown -R wagtail:wagtail /app \
 && mkdir -p /app/media/ \
 && chmod -R 777 /app/media

# Ajout des droits d'exécution aux fichiers des migrations
RUN chown -R wagtail:wagtail /usr/local/lib/python3.12/site-packages/

# Ajout de la commande pour attendre que la base de données soit prête
COPY scripts/wait-for-it.sh /usr/local/bin/wait-for-it.sh
RUN chmod +x /usr/local/bin/wait-for-it.sh

# Ajout de l'entrée de commande
COPY scripts/entrypoint.sh /app/entrypoint.sh
RUN chmod +x /app/entrypoint.sh

# ENTRYPOINT ["/entrypoint.sh"]

# Réinitialisation des permissions pour le répertoire /migrations 
# RUN chown -R root:root /usr/local/lib/python3.12/site-packages/wagtail/migrations/ \
#  && chmod -R 644 /usr/local/lib/python3.12/site-packages/wagtail/migrations/

# Utilisation de l'utilisateur non-root pour exécuter l'application
USER wagtail
