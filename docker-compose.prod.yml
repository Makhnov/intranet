version: '3.8'

services:
  web:
    container_name: web
    restart: always
    build: 
      context: ./web
      dockerfile: ./Dockerfile.prod
    volumes:
      - ./web:/app
      - static_volume:/app/static
      - media_volume:/app/media
    ports:
      - "8000:8000"
    depends_on:
      - db
      # - redis      
    env_file:
      - ./web/.env/.env.prod
    networks:
      - wagtail
    command: gunicorn intranet.wsgi:application --workers 4 --threads 4 --bind 0.0.0.0:8000


  nginx:
    container_name: nginx
    restart: unless-stopped
    build: 
      context: ./nginx/
      dockerfile: ./Dockerfile.prod
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./web/static:/static
      - ./web/media:/media
      - ./nginx/ssl:/etc/nginx/ssl
      - ./nginx/logs:/etc/nginx/logs
    depends_on:
      - web

    networks:
      - wagtail    


  db:
    container_name: db
    restart: always
    image: postgres:14.0-alpine
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - ./web/.env/.env.prod.db
    networks:
      - wagtail

  # redis:
  #   container_name: redis
  #   restart: always
  #   image: "redis:alpine"
  #   ports:
  #     - "6379:6379"
  #   networks:
  #     - wagtail

networks:
  wagtail:
    driver: bridge

volumes:
  postgres_data:
  static_volume:
  media_volume:  