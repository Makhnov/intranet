version: '3.8'

services:
  web:
    container_name: web
    restart: always
    build: 
      context: ./web
      dockerfile: ./Dockerfile.prod
    volumes:
      - ./web:/app
      - static_volume:/app/static
      - media_volume:/app/media
    ports:
      - "8000:8000"
    expose:
      - "8000"
    depends_on:
      - db
    env_file:
      - ./web/.env/.env.prod
    networks:
      - backend
      - frontend
    command: gunicorn intranet.wsgi:application --workers 4 --threads 4 --bind 0.0.0.0:8000

  nginx:
    image: nginx:latest
    container_name: nginx
    restart: always
    depends_on:
      - web
    volumes:
#      - ./etc/nginx/ssl:/etc/nginx/ssl:ro
#      - ./var/log/nginx:/var/log/nginx
      - ./etc/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./etc/nginx/sites-enabled/:/etc/nginx/sites-enabled:ro
      - ./etc/nginx/sites-available/:/etc/nginx/sites-available:ro
      - static_volume:/static:ro
      - media_volume:/media
      - /etc/localtime:/etc/localtime:ro
    networks:
      - frontend
    ports:
      - "0.0.0.0:80:80"
      - "0.0.0.0:443:443"


  db:
    container_name: db
    restart: always
    image: postgres:14.0-alpine
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - ./web/.env/.env.prod.db
    networks:
      - backend

networks:
  backend:
    name: backend
    driver: bridge  
  frontend:
    name: frontend
    external: true

volumes:
  postgres_data:
#    external: true
  static_volume:
    external: true
  media_volume:  
    external: true
  
  # redis:
  #   container_name: redis
  #   restart: always
  #   image: "redis:alpine"
  #   ports:
  #     - "6379:6379"
  #   networks:
  #     - wagtail